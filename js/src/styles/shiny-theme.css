/* Define layer order. Right now we only have a single layer of resets but in
the future may want to add more. Any code added by a user that doesn't
explicitely target a layer will go to the highest priority level and thus always
override styles from our reset layer */

@import "color-themes/choco.css";
@import "color-themes/grape.css";
@import "color-themes/dark.css";
@import "color-themes/dim.css";
@import "color-themes/light.css";
@import "adapters/component/shoelace-theme-adapter.css";

/* Import resets into a lower layer so they can be easily over-ridden */
@import "resets.css" layer(reset);

:root {
  color-scheme: light;

  /* Set defaults */

  /* The H of hsl for the brand color */
  --shiny-brand-hue: var(--shiny-theme-brand-hue, var(--brand-light-hue));
  --shiny-brand-hsl: var(--shiny-theme-brand-hsl, var(--brand-light-hsl));
  --shiny-brand: var(--shiny-theme-brand, var(--brand-light));
  --shiny-text-1: var(--shiny-theme-text-1, var(--text-1-light));
  --shiny-text-2: var(--shiny-theme-text-2, var(--text-2-light));
  --shiny-text-3: var(--shiny-theme-text-3, var(--text-3-light));
  --shiny-surface-1: var(--shiny-theme-surface-1, var(--surface-1-light));
  --shiny-surface-2: var(--shiny-theme-surface-2, var(--surface-2-light));
  --shiny-surface-3: var(--shiny-theme-surface-3, var(--surface-3-light));
  --shiny-surface-4: var(--shiny-theme-surface-4, var(--surface-4-light));
  --shiny-shadow-color: var(--shiny-theme-shadow-color, var(--shadow-color-light));
  --shiny-shadow-strength: var(--shiny-theme-shadow-strength, var(--shadow-strength-light));

  /* Status colors */
  --shiny-primary: var(--shiny-theme-primary, var(--shiny-brand));
  --shiny-success: var(--shiny-theme-success, var(--green-4));
  --shiny-warning: var(--shiny-theme-warning, var(--orange-8));
  --shiny-danger: var(--shiny-theme-danger, var(--red-8));

  /* Sizes */

  /* Things like adding padding around a toggle switch */
  --shiny-size-xxs: var(--shiny-theme-size-xxs, var(--size-1));
  --shiny-size-xs: var(--shiny-theme-size-xs, var(--size-2));
  --shiny-size-s: var(--shiny-theme-size-s, var(--size-3));
  --shiny-size-m: var(--shiny-theme-size-m, var(--size-fluid-2));
  --shiny-size-l: var(--shiny-theme-size-l, var(--size-fluid-3));
  --shiny-size-xl: var(--shiny-theme-size-xl, var(--size-fluid-5));
  --shiny-size-xxl: var(--shiny-theme-size-xxl, var(--size-fluid-6));

  /* Shadows */
  --shiny-shadow-s: var(--shiny-theme-shadow-s, var(--shadow-1));
  --shiny-shadow-m: var(--shiny-theme-shadow-m, var(--shadow-3));
  --shiny-shadow-l: var(--shiny-theme-shadow-l, var(--shadow-5));

  /* Text */
  --shiny-font-mono: var(--shiny-theme-font-mono, var(--font-mono));
  --shiny-font-sans: var(--shiny-theme-font-sans, var(--font-sans));
  --shiny-font-serif: var(--shiny-theme-font-serif, var(--font-serif));

  /* Sizes */
  --shiny-font-size-s: var(--shiny-theme-font-size-s, var(--font-size-0));
  --shiny-font-size-m: var(--shiny-theme-font-size-m, var(--font-size-2));
  --shiny-font-size-l: var(--shiny-theme-font-size-l, var(--font-size-4));
  --shiny-font-size-h1: var(--shiny-theme-font-size-h1, var(--font-size-fluid-2));
  --shiny-font-size-h2: var(--shiny-theme-font-size-h2, var(--font-size-fluid-1));
  --shiny-font-size-h3: var(--shiny-theme-font-size-h3, calc(var(--font-size-fluid-1) / 1.25)));
  --shiny-font-size-h4: var(--shiny-theme-font-size-h4, calc(var(--font-size-fluid-1) / 1.5)));
  --shiny-font-size-h5: var(--shiny-theme-font-size-h5, calc(var(--font-size-fluid-1) / 2)));

  /* Special variable that allow text to size to its container smartly */
  --shiny-font-size-fluid: var(--shiny-theme-font-size-fluid, clamp(
    var(--font-size-00),
    3cqi,
    var(--font-size-l)
  ));

  /* Weights */
  --shiny-font-weight-headings: var(--shiny-theme-font-weight-headings, var(--font-weight-4));
  --shiny-font-weight-bold: var(--shiny-theme-font-weight-bold, var(--font-weight-5));

  /* Line heights */
  --shiny-line-height-headings: var(--shiny-theme-line-height-headings, var(--font-lineheight-1));
  --shiny-line-height-main: var(--shiny-theme-line-height-main, var(--font-lineheight-3));

  /* Transitions */
  --shiny-speed-fast: var(--shiny-theme-speed-fast, 0.15s);
  --shiny-speed-normal: var(--shiny-theme-speed-normal, 0.3s);
  --shiny-speed-slow: var(--shiny-theme-speed-slow, 0.75s);

  /* Full transition definitions */
  --transition-ease: var(--ease-3);
  --transition-fast: var(--speed-fast) var(--transition-ease);
  --transition-normal: var(--speed-normal) var(--transition-ease);
  --transition-slow: var(--speed-slow) var(--transition-ease);

  /* Borders */
  --shiny-border-optional: var(--shiny-theme-border-optional, 0);
  --shiny-border-thin: var(--shiny-theme-border-thin, var(--border-size-1));
  --shiny-border-normal: var(--shiny-theme-border-normal, var(--border-size-2));
  --shiny-border-thick: var(--shiny-theme-border-thick, var(--border-size-3));

  /* Border with a tinge of the brand color */
  --shiny-border-color: var(--shiny-theme-border-standard, hsl(var(--brand-hue) 10% 50% / 15%));
  /* stylelint-disable-next-line declaration-block-no-duplicate-custom-properties */
  --shiny-border-color: var(--shiny-theme-border-color, color-mix(in srgb, var(--brand) 20%, var(--surface-1)));
  --shiny-border-standard: var(--shiny-theme-border-color, var(--border-thin) solid var(--border-color));

  /* Radii */
  --shiny-radius-s: var(--shiny-theme-radius-s, var(--radius-2));
  --shiny-radius-m: var(--shiny-theme-radius-m, var(--radius-3));
  --shiny-radius-l: var(--shiny-theme-radius-l, var(--radius-4));
  --shiny-radius-pill: var(--shiny-theme-radius-pill, 9999px);
}

@supports (font-size: 1cqi) {
  :is(.fluid-type) {
    font-size: var(--shiny-font-size-fluid);
  }
}

/* Set transition speeds to zero when the user prefers reduced motion */
@media (prefers-reduced-motion: reduce) {
  :root {
    --shiny-speed-fast: 0s;
    --shiny-speed-normal: 0s;
    --shiny-speed-slow: 0s;
  }
}

/* Default to dark mode if the user has requested */
@media (prefers-color-scheme: dark) {
  :root {
    color-scheme: dark;

    --shiny-brand-hue: var(--shiny-theme-brand-hue, var(--brand-dark-hue));
    --shiny-brand-hsl: var(--shiny-theme-brand-hsl, var(--brand-dark-hsl));
    --shiny-brand: var(--shiny-theme-brand, var(--brand-dark));
    --shiny-text-1: var(--shiny-theme-text-1, var(--text-1-dark));
    --shiny-text-2: var(--shiny-theme-text-2, var(--text-2-dark));
    --shiny-text-3: var(--shiny-theme-text-3, var(--text-3-dark));
    --shiny-surface-1: var(--shiny-theme-surface-1, var(--surface-1-dark));
    --shiny-surface-2: var(--shiny-theme-surface-2, var(--surface-2-dark));
    --shiny-surface-3: var(--shiny-theme-surface-3, var(--surface-3-dark));
    --shiny-surface-4: var(--shiny-theme-surface-4, var(--surface-4-dark));
    --shiny-shadow-color: var(--shiny-theme-shadow-color, var(--shadow-color-dark));
    --shiny-shadow-strength: var(--shiny-theme-shadow-strength, var(--shadow-strength-dark));
  }
}
