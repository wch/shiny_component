---
title: "Shinycomponent Example"
format: shinycomponent-html
execute:
  echo: false
---


```{python}
import pandas as pd
import json


# Load ebird-data.csv into a pandas dataframeget_records
ebird_data = pd.read_csv("example_data/ebird-data.csv")

# Read in the json file to a dictionary
with open( "example_data/species-taxonomy.json", "r") as f:
    species_taxonomy = json.load(f)

```

::: {.sc-grid nRows=2 nCols=2}



### Value Boxes

```{python}
import shinycomponent as sc

most_common_species = ebird_data.groupby("comName").size().sort_values(ascending=False).index[0]



sc.value_box(
  title="Most common species",
  value= most_common_species,
  icon="ph:bird",
  bg="purple"
)
```


```{python}

largest_sighting = ebird_data.sort_values("howMany", ascending=False).iloc[0]

sc.value_box(
  title="Largest single observation",
  value= int(largest_sighting["howMany"]),
  subvalue= f"{largest_sighting['comName']}s",
  icon="pajamas:group",
  bg="green"
)

```



### Leaflet Map

<style>
.leaflet-container .leaflet-control-attribution {display: none;}
</style>

```{python}
import ipyleaflet as L
from ipywidgets import Layout

ann_arbor_lat_lon = [42.273991, -83.754550]

map = L.Map(
  center=ann_arbor_lat_lon,
  zoom=11,
  scroll_wheel_zoom=True,
  basemap=L.basemaps.Esri.WorldTopoMap,
  # layout=Layout(width="100%", height="100%"),
)

# Add a distance scale
map.add_control(L.leaflet.ScaleControl(position="bottomleft"))
bird_markers = L.LayerGroup()
map.add_layer(bird_markers)

markers_for_records = []
for record_index in range(len(ebird_data)):
    record = ebird_data.iloc[record_index]
    center = (record["lat"], record["lng"])
    location = record["locName"]
    marker = L.Marker(location=center, draggable=False, title=location)
    markers_for_records.append(marker)

bird_marker_cluster = L.MarkerCluster(markers=markers_for_records)
bird_markers.add_layer(bird_marker_cluster)

map
```



### Static Plot

```{python}
import matplotlib.dates as mdates
import matplotlib.pyplot as plt

sightings_by_day = (
    ebird_data.groupby("obsDt")
    .size()
    .reset_index(name="count")
    .sort_values("obsDt")
    .set_index("obsDt")
)

fig, ax = plt.subplots()
ax.bar(sightings_by_day.index, sightings_by_day["count"])
ax.xaxis.set_major_locator(mdates.DayLocator(interval=28))
ax.xaxis.set_major_formatter(mdates.DateFormatter("%m/%d"))
ax.set_ylabel("Number of Sightings")
plt.xticks(rotation=45, ha="right")
plt.show()

```

:::



## Sidebar {.sc-sidebar}

### Welcome to my sidebar

Lorem ipsum and stuff and things...

Want to switch themes? {{< dark-mode-switch >}} Try that button

small: <forge-dark-mode-switch style="font-size: var(--font-size-s);"></forge-dark-mode-switch>

Normal: <forge-dark-mode-switch></forge-dark-mode-switch>

[Big: <forge-dark-mode-switch style="font-size: 3rem;"></forge-dark-mode-switch>]{style="font-size:3rem;"}


